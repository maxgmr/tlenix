//! All the Linux error codes returned by the [errno](https://www.man7.org/linux/man-pages/man3/errno.3.html)
//! syscall.

/// The Linux error codes returned by the
/// [errno](https://www.man7.org/linux/man-pages/man3/errno.3.html) syscall.
#[derive(Debug, Clone, Copy, PartialEq, Eq)]
#[repr(usize)]
#[non_exhaustive]
#[allow(missing_docs)]
pub enum Errno {
    Eperm = 1,
    Enoent,
    Esrch,
    Eintr,
    Eio,
    Enxio,
    E2big,
    Enoexec,
    Ebadf,
    Echild,
    Eagain,
    Enomem,
    Eacces,
    Efault,
    Enotblk,
    Ebusy,
    Eexist,
    Exdev,
    Enodev,
    Enotdir,
    Eisdir,
    Einval,
    Enfile,
    Emfile,
    Enotty,
    Etxtbsy,
    Efbig,
    Enospc,
    Espipe,
    Erofs,
    Emlink,
    Epipe,
    Edom,
    Erange,
    Edeadlk,
    Enametoolong,
    Enolck,
    Enosys,
    Enotempty,
    Eloop,
    Enomsg = 42,
    Eidrm,
    Echrng,
    El2nsync,
    El3hlt,
    El3rst,
    Elnrng,
    Eunatch,
    Enocsi,
    El2hlt,
    Ebade,
    Ebadr,
    Exfull,
    Enoano,
    Ebadrqc,
    Ebadslt,
    Ebfont = 59,
    Enostr,
    Enodata,
    Etime,
    Enosr,
    Enonet,
    Enopkg,
    Eremote,
    Enolink,
    Eadv,
    Esrmnt,
    Ecomm,
    Eproto,
    Emultihop,
    Edotdot,
    Ebadmsg,
    Eoverflow,
    Enotuniq,
    Ebadfd,
    Eremchg,
    Elibacc,
    Elibbad,
    Elibscn,
    Elibmax,
    Elibexec,
    Eilseq,
    Erestart,
    Estrpipe,
    Eusers,
    Enotsock,
    Edestaddrreq,
    Emsgsize,
    Eprototype,
    Enoprotoopt,
    Eprotonosupport,
    Esocktnosupport,
    Eopnotsupp,
    Epfnosupport,
    Eafnosupport,
    Eaddrinuse,
    Eaddrnotavail,
    Enetdown,
    Enetunreach,
    Enetreset,
    Econnaborted,
    Econnreset,
    Enobufs,
    Eisconn,
    Enotconn,
    Eshutdown,
    Enomanyrefs,
    Etimedout,
    Econnrefused,
    Ehostdown,
    Ehostunreach,
    Ealready,
    Einprogress,
    Estale,
    Euclean,
    Enotnam,
    Enavail,
    Eisnam,
    Eremoteio,
    Edquot,
    Enomedium,
    Emediumtype,
    Ecanceled,
    Enokey,
    Ekeyexpired,
    Ekeyrevoked,
    Ekeyrejected,
    Eownerdead,
    Enotrecoverable,
}
impl Errno {
    /// Get the message str associated with this error.
    #[allow(clippy::too_many_lines)]
    pub const fn as_str(&self) -> &'static str {
        #[allow(clippy::enum_glob_use)]
        use Errno::*;
        match self {
            Eperm => "Operation not permitted",
            Enoent => "No such file or directory",
            Esrch => "No such process",
            Eintr => "Interrupted system call",
            Eio => "I/O error",
            Enxio => "No such device or address",
            E2big => "Argument list too long",
            Enoexec => "Exec format error",
            Ebadf => "Bad file number",
            Echild => "No child processes",
            Eagain => "Try again",
            Enomem => "Out of memory",
            Eacces => "Permission denied",
            Efault => "Bad address",
            Enotblk => "Block device required",
            Ebusy => "Device or resource busy",
            Eexist => "File exists",
            Exdev => "Cross-device link",
            Enodev => "No such device",
            Enotdir => "Not a directory",
            Eisdir => "Is a directory",
            Einval => "Invalid argument",
            Enfile => "File table overflow",
            Emfile => "Too many open files",
            Enotty => "Not a typewriter",
            Etxtbsy => "Text file busy",
            Efbig => "File too large",
            Enospc => "No space left on device",
            Espipe => "Illegal seek",
            Erofs => "Read-only file system",
            Emlink => "Too many links",
            Epipe => "Broken pipe",
            Edom => "Math argument out of domain of func",
            Erange => "Math result not representable",
            Edeadlk => "Resource deadlock would occur",
            Enametoolong => "File name too long",
            Enolck => "No record locks available",
            Enosys => "Function not implemented",
            Enotempty => "Directory not empty",
            Eloop => "Too many symbolic links encountered",
            Enomsg => "No message of desired type",
            Eidrm => "Identifier removed",
            Echrng => "Channel number out of range",
            El2nsync => "Level 2 not synchronized",
            El3hlt => "Level 3 halted",
            El3rst => "Level 3 reset",
            Elnrng => "Link number out of range",
            Eunatch => "Protocol driver not attached",
            Enocsi => "No CSI structure available",
            El2hlt => "Level 2 halted",
            Ebade => "Invalid exchange",
            Ebadr => "Invalid request descriptor",
            Exfull => "Exchange full",
            Enoano => "No anode",
            Ebadrqc => "Invalid request code",
            Ebadslt => "Invalid slot",
            Ebfont => "Bad font file format",
            Enostr => "Device not a stream",
            Enodata => "No data available",
            Etime => "Timer expired",
            Enosr => "Out of streams resources",
            Enonet => "Machine is not on the network",
            Enopkg => "Package not installed",
            Eremote => "Object is remote",
            Enolink => "Link has been severed",
            Eadv => "Advertise error",
            Esrmnt => "Srmount error",
            Ecomm => "Communication error on send",
            Eproto => "Protocol error",
            Emultihop => "Multihop attempted",
            Edotdot => "RFS specific error",
            Ebadmsg => "Not a data message",
            Eoverflow => "Value too large for defined data type",
            Enotuniq => "Name not unique on network",
            Ebadfd => "File descriptor in bad state",
            Eremchg => "Remote address changed",
            Elibacc => "Can not access a needed shared library",
            Elibbad => "Accessing a corrupted shared library",
            Elibscn => ".lib section in a.out corrupted",
            Elibmax => "Attempting to link in too many shared libraries",
            Elibexec => "Cannot exec a shared library directly",
            Eilseq => "Illegal byte sequence",
            Erestart => "Interrupted system call should be restarted",
            Estrpipe => "Streams pipe error",
            Eusers => "Too many users",
            Enotsock => "Socket operation on non-socket",
            Edestaddrreq => "Destination address required",
            Emsgsize => "Message too long",
            Eprototype => "Protocol wrong type for socket",
            Enoprotoopt => "Protocol not available",
            Eprotonosupport => "Protocol not supported",
            Esocktnosupport => "Socket type not supported",
            Eopnotsupp => "Operation not supported on transport endpoint",
            Epfnosupport => "Protocol family not supported",
            Eafnosupport => "Address family not supported by protocol",
            Eaddrinuse => "Address already in use",
            Eaddrnotavail => "Cannot assign requested address",
            Enetdown => "Network is down",
            Enetunreach => "Network is unreachable",
            Enetreset => "Network dropped connection because of reset",
            Econnaborted => "Software caused connection abort",
            Econnreset => "Connection reset by peer",
            Enobufs => "No buffer space available",
            Eisconn => "Transport endpoint is already connected",
            Enotconn => "Transport endpoint is not connected",
            Eshutdown => "Cannot send after transport endpoint shutdown",
            Enomanyrefs => "Too many references: cannot splice",
            Etimedout => "Connection timed out",
            Econnrefused => "Connection refused",
            Ehostdown => "Host is down",
            Ehostunreach => "No route to host",
            Ealready => "Operation already in progress",
            Einprogress => "Operation now in progress",
            Estale => "Stale NFS file handle",
            Euclean => "Structure needs cleaning",
            Enotnam => "Not a XENIX named type file",
            Enavail => "No XENIX semaphores available",
            Eisnam => "Is a named type file",
            Eremoteio => "Remote I/O error",
            Edquot => "Quota exceeded",
            Enomedium => "No medium found",
            Emediumtype => "Wrong medium type",
            Ecanceled => "Operation Canceled",
            Enokey => "Required key not available",
            Ekeyexpired => "Key has expired",
            Ekeyrevoked => "Key has been revoked",
            Ekeyrejected => "Key was rejected by service",
            Eownerdead => "Owner died",
            Enotrecoverable => "State not recoverable",
        }
    }
}
#[allow(clippy::too_many_lines)]
impl core::fmt::Display for Errno {
    fn fmt(&self, f: &mut core::fmt::Formatter<'_>) -> core::fmt::Result {
        #[allow(clippy::enum_glob_use)]
        use Errno::*;
        let strcode = match self {
            Eperm => "EPERM",
            Enoent => "ENOENT",
            Esrch => "ESRCH",
            Eintr => "EINTR",
            Eio => "EIO",
            Enxio => "ENXIO",
            E2big => "E2BIG",
            Enoexec => "ENOEXEC",
            Ebadf => "EBADF",
            Echild => "ECHILD",
            Eagain => "EAGAIN",
            Enomem => "ENOMEM",
            Eacces => "EACCES",
            Efault => "EFAULT",
            Enotblk => "ENOTBLK",
            Ebusy => "EBUSY",
            Eexist => "EEXIST",
            Exdev => "EXDEV",
            Enodev => "ENODEV",
            Enotdir => "ENOTDIR",
            Eisdir => "EISDIR",
            Einval => "EINVAL",
            Enfile => "ENFILE",
            Emfile => "EMFILE",
            Enotty => "ENOTTY",
            Etxtbsy => "ETXTBSY",
            Efbig => "EFBIG",
            Enospc => "ENOSPC",
            Espipe => "ESPIPE",
            Erofs => "EROFS",
            Emlink => "EMLINK",
            Epipe => "EPIPE",
            Edom => "EDOM",
            Erange => "ERANGE",
            Edeadlk => "EDEADLK",
            Enametoolong => "ENAMETOOLONG",
            Enolck => "ENOLCK",
            Enosys => "ENOSYS",
            Enotempty => "ENOTEMPTY",
            Eloop => "ELOOP",
            Enomsg => "ENOMSG",
            Eidrm => "EIDRM",
            Echrng => "ECHRNG",
            El2nsync => "EL2NSYNC",
            El3hlt => "EL3HLT",
            El3rst => "EL3RST",
            Elnrng => "ELNRNG",
            Eunatch => "EUNATCH",
            Enocsi => "ENOCSI",
            El2hlt => "EL2HLT",
            Ebade => "EBADE",
            Ebadr => "EBADR",
            Exfull => "EXFULL",
            Enoano => "ENOANO",
            Ebadrqc => "EBADRQC",
            Ebadslt => "EBADSLT",
            Ebfont => "EBFONT",
            Enostr => "ENOSTR",
            Enodata => "ENODATA",
            Etime => "ETIME",
            Enosr => "ENOSR",
            Enonet => "ENONET",
            Enopkg => "ENOPKG",
            Eremote => "EREMOTE",
            Enolink => "ENOLINK",
            Eadv => "EADV",
            Esrmnt => "ESRMNT",
            Ecomm => "ECOMM",
            Eproto => "EPROTO",
            Emultihop => "EMULTIHOP",
            Edotdot => "EDOTDOT",
            Ebadmsg => "EBADMSG",
            Eoverflow => "EOVERFLOW",
            Enotuniq => "ENOTUNIQ",
            Ebadfd => "EBADFD",
            Eremchg => "EREMCHG",
            Elibacc => "ELIBACC",
            Elibbad => "ELIBBAD",
            Elibscn => "ELIBSCN",
            Elibmax => "ELIBMAX",
            Elibexec => "ELIBEXEC",
            Eilseq => "EILSEQ",
            Erestart => "ERESTART",
            Estrpipe => "ESTRPIPE",
            Eusers => "EUSERS",
            Enotsock => "ENOTSOCK",
            Edestaddrreq => "EDESTADDRREQ",
            Emsgsize => "EMSGSIZE",
            Eprototype => "EPROTOTYPE",
            Enoprotoopt => "ENOPROTOOPT",
            Eprotonosupport => "EPROTONOSUPPORT",
            Esocktnosupport => "ESOCKTNOSUPPORT",
            Eopnotsupp => "EOPNOTSUPP",
            Epfnosupport => "EPFNOSUPPORT",
            Eafnosupport => "EAFNOSUPPORT",
            Eaddrinuse => "EADDRINUSE",
            Eaddrnotavail => "EADDRNOTAVAIL",
            Enetdown => "ENETDOWN",
            Enetunreach => "ENETUNREACH",
            Enetreset => "ENETRESET",
            Econnaborted => "ECONNABORTED",
            Econnreset => "ECONNRESET",
            Enobufs => "ENOBUFS",
            Eisconn => "EISCONN",
            Enotconn => "ENOTCONN",
            Eshutdown => "ESHUTDOWN",
            Enomanyrefs => "ENOMANYREFS",
            Etimedout => "ETIMEDOUT",
            Econnrefused => "ECONNREFUSED",
            Ehostdown => "EHOSTDOWN",
            Ehostunreach => "EHOSTUNREACH",
            Ealready => "EALREADY",
            Einprogress => "EINPROGRESS",
            Estale => "ESTALE",
            Euclean => "EUCLEAN",
            Enotnam => "ENOTNAM",
            Enavail => "ENAVAIL",
            Eisnam => "EISNAM",
            Eremoteio => "EREMOTEIO",
            Edquot => "EDQUOT",
            Enomedium => "ENOMEDIUM",
            Emediumtype => "EMEDIUMTYPE",
            Ecanceled => "ECANCELED",
            Enokey => "ENOKEY",
            Ekeyexpired => "EKEYEXPIRED",
            Ekeyrevoked => "EKEYREVOKED",
            Ekeyrejected => "EKEYREJECTED",
            Eownerdead => "EOWNERDEAD",
            Enotrecoverable => "ENOTRECOVERABLE",
        };
        write!(f, "{strcode}")
    }
}
